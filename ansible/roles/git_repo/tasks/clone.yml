---
- name: Check if repository exists
  stat:
    path: "{{ git_repo_dest }}/.git"
  register: repo_exists
  tags: check

- name: Clone repository if it doesn't exist
  git:
    repo: "{{ git_repo_url }}"
    dest: "{{ git_repo_dest }}"
    version: "{{ git_repo_branch }}"
    accept_hostkey: "{{ git_repo_accept_hostkey }}"
    force: "{{ git_repo_force }}"
    depth: "{{ git_repo_depth }}"
    single_branch: "{{ git_repo_single_branch }}"
    key_file: "{{ git_repo_ssh_key | default(omit) }}"
  when: not repo_exists.stat.exists
  tags: clone
  notify: set_permissions

- name: Update existing repository
  git:
    repo: "{{ git_repo_url }}"
    dest: "{{ git_repo_dest }}"
    version: "{{ git_repo_branch }}"
    accept_hostkey: "{{ git_repo_accept_hostkey }}"
    force: "{{ git_repo_force }}"
    update: "{{ git_repo_update }}"
    key_file: "{{ git_repo_ssh_key | default(omit) }}"
  when: repo_exists.stat.exists
  tags: update
  notify: set_permissions

- name: Clean untracked files if enabled
  command: git clean -fd
  args:
    chdir: "{{ git_repo_dest }}"
  when: git_repo_clean_untracked | bool
  tags: clean

- name: Reset local changes if enabled
  command: git reset --hard HEAD
  args:
    chdir: "{{ git_repo_dest }}"
  when: git_repo_reset_changes | bool
  tags: reset